define({ "api": [  {    "type": "get",    "url": "/login/",    "title": "Check user is logged in",    "name": "checkLogin",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/forgot-password/",    "title": "User Forgot Password request",    "name": "forgotPassword",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/:account.json/",    "title": "Get User Avatar",    "name": "getAvatar",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "account",            "description": "<p>The avatar image for requested account.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/:account.json/",    "title": "List account information",    "name": "listInfo",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "account.json",            "description": "<p>The Account to list information for.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/login",    "title": "Create a Login session",    "name": "login",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/logout/",    "title": "Create a logout request",    "name": "logout",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "get",    "url": "/version/",    "title": "Print application version",    "name": "printVersion",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "put",    "url": "/:account/password",    "title": "Reset User Password",    "name": "resetPassword",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/:account",    "title": "Sign up form",    "name": "signUp",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "put",    "url": "/:account",    "title": "Update User password",    "name": "updateUser",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/:account/avatar",    "title": "Get User Avatar",    "name": "uploadAvatar",    "group": "Auth",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "account",            "description": "<p>The account to upload avatar to.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/:account/verify",    "title": "Verify the user",    "name": "verify",    "group": "Auth",    "version": "0.0.0",    "filename": "./auth.js",    "groupTitle": "Auth"  },  {    "type": "post",    "url": "/groups/",    "title": "Create a group",    "name": "createGroup",    "description": "<p>Add a group to the model.</p>",    "group": "Groups",    "version": "0.0.0",    "filename": "./group.js",    "groupTitle": "Groups"  },  {    "type": "delete",    "url": "/groups/",    "title": "Delete groups",    "name": "deleteGroups",    "description": "<p>Delete groups from the model.</p>",    "group": "Groups",    "version": "0.0.0",    "filename": "./group.js",    "groupTitle": "Groups"  },  {    "type": "get",    "url": "/groups/revision/master/head/",    "title": "List model groups",    "name": "listGroups",    "group": "Groups",    "version": "0.0.0",    "filename": "./group.js",    "groupTitle": "Groups"  },  {    "type": "get",    "url": "/groups/revision/:rid/",    "title": "List model groups by revision",    "description": "<p>List all groups using the revision ID</p>",    "name": "listGroupsByRevision",    "group": "Groups",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./group.js",    "groupTitle": "Groups"  },  {    "type": "put",    "url": "/groups/:uid/",    "title": "Update group",    "name": "updateGroup",    "description": "<p>Update a group using Group ID</p>",    "group": "Groups",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Group unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./group.js",    "groupTitle": "Groups"  },  {    "type": "get",    "url": "/invoices",    "title": "List all invoices",    "name": "listInvoices",    "group": "Invoice",    "version": "0.0.0",    "filename": "./invoice.js",    "groupTitle": "Invoice"  },  {    "type": "get",    "url": "/invoices/:invoiceNo.html",    "title": "Render invoices as HTML",    "name": "renderInvoice",    "group": "Invoice",    "version": "0.0.0",    "filename": "./invoice.js",    "groupTitle": "Invoice"  },  {    "type": "get",    "url": "/invoices/:invoiceNo.pdf",    "title": "Render invoices as PDF",    "name": "renderInvoicePDF",    "group": "Invoice",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "invoiceNo.pdf",            "description": "<p>Invoice to render.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./invoice.js",    "groupTitle": "Invoice"  },  {    "type": "get",    "url": "/issues/analytics.:format",    "title": "Get Issue Analytics",    "name": "getIssueAnalytics",    "group": "Issues_Analytics",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "analytics.:format",            "description": "<p>Analytics file to create</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issueAnalytic.js",    "groupTitle": "Issues_Analytics"  },  {    "type": "get",    "url": "/issues/:uid.json",    "title": "Find Issue by ID",    "name": "findIssueById",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Issue unique ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "issue",            "description": "<p>The Issue matching the Issue ID</p>"          }        ]      },      "examples": [        {          "title": "Example of returned data on success:",          "content": "{\n\t\taccount: \"T_E_S_T\"\n\t\tassigned_roles: []\n\t\tcommentCount: 0\n\t\tcreated: 1542723030489\n\t\tcreator_role: \"3D Repo\"\n\t\tdesc: \"(No Description)\"\n\t\tmodel: \"0687ef98-52b8-4910-a211-4cef1cb7422c\"\n\t\tmodelCode: \"\"\n\t\tname: \"Issue one\"\n\t\tnorm: []\n\t\tnumber: 1\n\t\towner: \"nabile\"\n\t\tposition: []\n\t\tpriority: \"none\"\n\t\trev_id: \"97569b32-deb2-4ab4-98d6-bf0fe45b7d55\"\n\t\tscale: 1\n\t\tstatus: \"open\"\n\t\tthumbnail: \"T_E_S_T/0687ef98-52b8-4910-a211-4cef1cb7422c/issues/09a4bf10-ecce-11e8-9c10-cbf0778834d1/thumbnail.png\"\n\t\ttopic_type: \"for_information\"\n\t\ttypePrefix: \"Architectural\"\n\t\tviewCount: 1\t\n\t\tviewpoint: {near: 24.057758331298828, far: 12028.87890625, fov: 1.0471975803375244,â€¦}\n\t\t__v: 0\n\t\t_id: \"09a4bf10-ecce-11e8-9c10-cbf0778834d1\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "IssueNotFound",            "description": "<p>The issue requested was not found</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/issues/:uid.json",    "title": "Get Issue Thumbnail",    "name": "findIssueById",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>Issue unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "post",    "url": "/revision/:rid/issues.bcfzip",    "title": "Post Issues BCF zip file by revision ID",    "name": "getIssuesBCF",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/revision/:rid/issues.bcfzip",    "title": "Get Issues BCF zip file by revision ID",    "name": "getIssuesBCF",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/issues.bcfzip",    "title": "Get Issues BCF zip file",    "name": "getIssuesBCF",    "group": "Issues",    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/issues.bcfzip",    "title": "Get Issue Screenshot",    "name": "getScreenshot",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Viewpoint unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/issues/:uid/viewpoints/:vid/screenshotSmall.png",    "title": "Get smaller version of Issue screenshot",    "name": "getScreenshotSmall",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Viewpoint unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "post",    "url": "/issues.bcfzip",    "title": "Import BCF file",    "name": "importBCF",    "group": "Issues",    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/issues.json",    "title": "Get all Issues",    "name": "listIssues",    "group": "Issues",    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/revision/:rid/issues.json",    "title": "Get all Issues by revision ID",    "name": "listIssues",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "/issues.html",    "title": "Issues response into as HTML",    "name": "renderIssuesHTML",    "group": "Issues",    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "get",    "url": "revision/:rid/issues.html",    "title": "Issues response into as HTML by revision ID",    "name": "renderIssuesHTML",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "post",    "url": "/issuesId.json",    "title": "Store issue based on revision",    "name": "storeIssue",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rid",            "description": "<p>Unique Revision ID to store.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "post",    "url": "/issues.json",    "title": "Save an Issue",    "name": "storeIssue",    "group": "Issues",    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "post",    "url": "issues/:issuesId.json",    "title": "Update an Issue",    "name": "updateIssue",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "issueId.json",            "description": "<p>Unique Issue ID to update.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "put",    "url": "revision/\"rid/issues/:issueId.json",    "title": "Update issue based on revision",    "name": "updateIssue",    "group": "Issues",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rid",            "description": "<p>Unique Revision ID to update to.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "issueId",            "description": "<p>Unique Issue ID to update.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./issue.js",    "groupTitle": "Issues"  },  {    "type": "post",    "url": "/jobs/:jobId/:user",    "title": "Assign a job to a user",    "name": "addUserToJob",    "group": "Jobs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "jobId",            "description": "<p>Unique Job ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "user",            "description": "<p>User to assign job to.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "post",    "url": "/jobs",    "title": "Create a new job",    "name": "createJob",    "group": "Jobs",    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "delete",    "url": "/jobs/:jobId",    "title": "Delete a job",    "name": "deleteJob",    "group": "Jobs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "jobId",            "description": "<p>Unique Job ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "get",    "url": "/myJob",    "title": "Get user Job",    "name": "getUserJob",    "group": "Jobs",    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "get",    "url": "/jobs/colors",    "title": "List all Colors",    "name": "listColors",    "group": "Jobs",    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "get",    "url": "/jobs",    "title": "List all Jobs",    "name": "listJobs",    "group": "Jobs",    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "delete",    "url": "/jobs",    "title": "Remove a job from a user",    "name": "removeUserFromJobs",    "group": "Jobs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User to remove job from.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "put",    "url": "/jobs/:jobId",    "title": "Update User Job",    "name": "updateJob",    "group": "Jobs",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "jobId",            "description": "<p>Unique Job ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./job.js",    "groupTitle": "Jobs"  },  {    "type": "get",    "url": "/:model/maps/osm/:zoomLevel/:gridx/:gridy.png",    "title": "Get OSMT file",    "name": "getOSMTile",    "group": "Maps",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "zoomLevel",            "description": "<p>Map Zoom level.</p>"          },          {            "group": "Parameter",            "optional": false,            "field": "model",            "description": "<p>Model to list maps for</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./maps.js",    "groupTitle": "Maps"  },  {    "type": "get",    "url": ".:model/maps",    "title": "List all Maps",    "name": "listMaps",    "group": "Maps",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "model",            "description": "<p>Model to list maps for .</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./maps.js",    "groupTitle": "Maps"  },  {    "type": "get",    "url": "/revision/master/head/meta/4DTaskSequence.json",    "title": "Get All meta data for 4D Sequence Tags",    "name": "getAllIdsWith4DSequenceTag",    "group": "Meta",    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revision/:rev/meta/4DTaskSequence.json",    "title": "Get All meta data with 4D Sequence Tags by revision",    "name": "getAllIdsWith4DSequenceTag",    "group": "Meta",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rev",            "description": "<p>Revision</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revision/:rev/meta/findObjsWith/:metaKey.json",    "title": "Get all meta data with field based on revision",    "name": "getAllIdsWithMetadataField",    "group": "Meta",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rev",            "description": "<p>Revision to get meta data from</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "metaKey",            "description": "<p>Unique meta key</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revision/:rev/meta/findObjsWith/:metaKey.json",    "title": "Get all meta data with field based on master branch",    "name": "getAllIdsWithMetadataField",    "group": "Meta",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rev",            "description": "<p>Revision to get meta data from</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "metaKey",            "description": "<p>Unique meta key</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revision/master/head/meta/findObjsWith/:metaKey.json",    "title": "Get All ids with the meta data field",    "name": "getAllIdsWithMetadataField",    "group": "Meta",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "metaKey",            "description": "<p>Unique meta key</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revision/master/head/meta/all.json",    "title": "Get all meta data",    "name": "getAllMetadata",    "group": "Meta",    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revision/:rev/meta/all.json",    "title": "Get all meta data",    "name": "getAllMetadata",    "group": "Meta",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rev",            "description": "<p>Revision to get meta data from</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/meta/:id.json",    "title": "Get meta data",    "name": "getMetadata",    "group": "Meta",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "optional": false,            "field": "id",            "description": "<p>Meta Unique ID</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./meta.js",    "groupTitle": "Meta"  },  {    "type": "get",    "url": "/revisions.json",    "title": "List all revisions",    "name": "listRevisions",    "group": "Revisions",    "version": "0.0.0",    "filename": "./history.js",    "groupTitle": "Revisions"  },  {    "type": "get",    "url": "/revisions/:branch.json",    "title": "List all revisions by branch",    "name": "listRevisionsByBranch",    "group": "Revisions",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "branch.json",            "description": "<p>Branch required to list revisions for.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./history.js",    "groupTitle": "Revisions"  },  {    "type": "put",    "url": "/revisions/:id/tag",    "title": "Update Revision Tag",    "name": "updateRevisionTag",    "group": "Revisions",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Unique Revision ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "tag",            "description": "<p>Tag to update</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./history.js",    "groupTitle": "Revisions"  },  {    "type": "delete",    "url": "/risks/",    "title": "Delete risks",    "name": "deleteRisks",    "group": "Risks",    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks/:uid.json",    "title": "Find Risk by ID",    "name": "findRiskById",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Risk unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks/:uid/screenshot.png",    "title": "Get Risks Screenshot",    "name": "getScreenshot",    "group": "Risks",    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks/:uid/screenshotSmall.png",    "title": "Get Small Risks Screenshot",    "name": "getScreenshotSmall",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Risk unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks/:uid/thumbnail.png",    "title": "Get Risks Thumbnail",    "name": "getThumbnail",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Risk unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks/:rid/risks.json",    "title": "List all Risks by revision ID",    "name": "listRisks",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks.json",    "title": "List All Risks",    "name": "listRisks",    "group": "Risks",    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks.html",    "title": "Render all Risks as HTML",    "name": "renderRisksHTML",    "group": "Risks",    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/risks.html",    "title": "Render all Risks as HTML by revision ID",    "name": "renderRisksHTML",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "post",    "url": "/revision/:rid/risks.json",    "title": "Store risks based on Revision ID",    "name": "storeRisk",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rid",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "post",    "url": "/risks.json",    "title": "Store Risks",    "name": "storeRisk",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "put",    "url": "/risks/riskId.json",    "title": "Update risks based on revision",    "name": "updateRisk",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "riskId.json",            "description": "<p>Risk unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "put",    "url": "/revision/:rid/risks/:riskId.json",    "title": "Update Risk based on revision ID",    "name": "updateRisk",    "group": "Risks",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rid",            "description": "<p>Revision unique ID.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./risk.js",    "groupTitle": "Risks"  },  {    "type": "get",    "url": "/user",    "title": "Request User Information",    "name": "GetUser",    "group": "User",    "version": "0.2.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The users name</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "age",            "description": "<p>Calculated age from Birthday</p>"          }        ]      },      "examples": [        {          "title": "Example data on success: ",          "content": "{\nname:'Paul',\nage:27\n}",          "type": "json"        }      ]    },    "filename": "./example.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user",    "title": "Request User Information",    "name": "GetUser",    "group": "User",    "version": "0.1.0",    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>The users name</p>"          }        ]      },      "examples": [        {          "title": "Example data on success:",          "content": "{\nname:'Paul'\n}",          "type": "json"        }      ]    },    "filename": "./_apidoc.js",    "groupTitle": "User"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./doc/main.js",    "group": "_Applications_MAMP_htdocs_3d_3drepo_io_backend_routes_doc_main_js",    "groupTitle": "_Applications_MAMP_htdocs_3d_3drepo_io_backend_routes_doc_main_js",    "name": ""  }] });
