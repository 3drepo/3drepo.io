extends layout

block content

	script.
		//- Need this to make the link with angular
		//- TODO: find a better way and avoid globals
		var Behaviour = {};

		var Measurer = function() {
			this.v1 = {x:0, y:0, z:0};
			this.v2 = {x:0, y:0, z:0};

			this.currentPoint = this.v1;

			this.updatePoint = function(x,y,z) 
			{
				this.currentPoint.x = x;
				this.currentPoint.y = y;
				this.currentPoint.z = z;

				document.getElementById("line").setAttribute("point", this.v1.x + " " + this.v1.y + " " + this.v1.z + "," + this.v2.x + " " + this.v2.y + " " + this.v2.z);
			}

			this.togglePoint = function()
			{
				if (this.currentPoint == this.v1)
				{
					this.currentPoint = this.v2;
					document.getElementById("lineTrafo").setAttribute("render", "true");
				} else {
					this.currentPoint = this.v1;
					document.getElementById("lineTrafo").setAttribute("render", "false");
				}
			};

			this.distance = function()
			{
				var vec = {x: (this.v1.x - this.v2.x),
					y: (this.v1.y - this.v2.y),
					z: (this.v1.z - this.v2.z)};

				return Math.sqrt ( Math.pow(vec.x, 2) + 
						Math.pow(vec.y, 2) + 
						Math.pow(vec.z, 2) );
			};
		}


		$(document).ready(function() {
			window.measurer = new Measurer();
			var shapes = document.getElementsByTagName("shape");

			for (var i = 0; i < shapes.length; i++) {
				var current = shapes[i];
				shapes[i].onclick = function (event)
				{
					if(Behaviour['picked']){
						Behaviour.picked(current);
					}
					else{
						console.log('Not implemented');
					}
					if (window.old_object)
						window.old_object.attr('emissiveColor', "0 0 0");

					document.getElementById('popup').style.visibility = "visible";

					window.old_object = $(this).children('appearance').children('material');
					$(this).children('appearance').children('material').attr('emissiveColor', '1.0 0.5 0');
					$('#mesh_name').text($(this).attr('def'));

					$('#price_val').text('£' + (Math.random() * 1000).toFixed(2));

					if (window.toggleMeasure)
					{
						window.measurer.togglePoint();	
					}
				};
				shapes[i].onmouseover = function (event)
				{
					if (window.toggleMeasure)
					{
						window.measurer.updatePoint(event.worldX, event.worldY, event.worldZ);			
					}
				};
	
				shapes[i].onmousemove = function (event)
				{
					if (window.toggleMeasure)
					{
						window.measurer.updatePoint(event.worldX, event.worldY, event.worldZ);
						$('#distance').text(measurer.distance().toFixed(2) + ' m');
					}	
				};
			}

			var scene = document.getElementsByTagName("scene")[0];

			var trans = document.createElement("Transform");
			trans.setAttribute("id", "lineTrafo");
			trans.setAttribute("render", "false");

			scene.appendChild(trans);

			var shape = document.createElement("Shape");
			shape.setAttribute("isPickable","false");

			trans.appendChild(shape);

			var app = document.createElement("Appearance");
			shape.appendChild(app);

			var mat = document.createElement("Material");
			mat.setAttribute("emissiveColor", "1 0 0");
			app.appendChild(mat);

			var dep = document.createElement("DepthMode");
			dep.setAttribute("enableDepthTest","false");
			app.appendChild(dep);

			var idls = document.createElement("IndexedLineSet");
			idls.setAttribute("coordIndex", "0 1 0 -1");
			shape.appendChild(idls);

			var coord = document.createElement("Coordinate");
			coord.setAttribute("id","line");
			coord.setAttribute("point"," 0.0 0.0 0.0, 1.0 1.0 1.0");
			idls.appendChild(coord);

		});

		document.onload = function(e) {
			window.toggleMeasure = false;

			jQuery("#view-everything").click(function(e) {
				document.getElementById("model").runtime.showAll();
			});

			jQuery("#view-def-viewpoint").click(function(e) {
				document.getElementById("model").runtime.resetView();
			});

			jQuery("#examine").click(function(e) {
				document.getElementById("model").runtime.showAll();
			});

			jQuery("#measure").click(function(e) {
				if (window.toggleMeasure)
				{
					$("#x3dom-model-canvas").css("cursor", "default");
					$("#distance").css("visibility", "hidden");
					$("#dist_name").css("visibility", "hidden");
				}
				else
				{
					$("#x3dom-model-canvas").css("cursor", "crosshair");
					$("#lineTrafo").prop("render", false);
					$("#distance").css("visibility", "visible");
					$("#dist_name").css("visibility", "visible");
				}

				window.toggleMeasure = !window.toggleMeasure;
			});

		};

	//- Recursive Tree View
	script(type="text/ng-template" id="tree_element.html")
		a(href="#" ng-click="select_item(data); navigate_to(data)")
			//- Pick the correct icon
			i(ng-if="!data.nodes" ng-class="iconLeaf" class="icon" ng-click="toggle_expand(data)")
			i(ng-if="data.nodes && !data.expanded" ng-class="iconExpand" class="icon" ng-click="toggle_expand(data)")
			i(ng-if="data.nodes && data.expanded" ng-class="iconCollapse" class="icon" ng-click="toggle_expand(data)")
			span {{data.name}}

			//- If this is not a leaf node and linked, we just display the total of its children
			div(class="itempricegroup" ng-if="data.nodes && data.linked") 
				div(class="linkicon") 
					i(ng-class="iconLink" class="icon"  ng-click="toggle_link(data)")
				div(class="itemprice" style="font-weight: bold;") {{compute_bid(data)}}

			//- Otherwise we allow an input field to set the bid
			form(class="itempricegroup" ng-if="!data.nodes || !data.linked")
				//- For leaf nodes use hidden icon to keep the same margin
				div(class="linkicon-hidden" ng-if="!data.nodes") 
					i(ng-class="iconLink" class="icon")
				//- For non-leaf nodes, disable the link icon by making it semi transparent
				div(class="linkicon-disabled" ng-if="data.nodes" ng-click="toggle_link(data)") 
					i(ng-class="iconLink" class="icon")
				//- Bid input - make sure to defocus on enter, only allow numbers for the moment, bind to the current data.bid						
				div(class="itemprice")
					input(ui-event="{keypress:'blurOnEnter($event)'}" class="priceinput" type="tel" onkeypress='return event.charCode >= 48 && event.charCode <= 57' min="0" ng-model="data.bid" size="20")

		//- Recurse on chilren
		ul(ng-show="data.expanded" class="nav nav-pills nav-stacked treerow")
			li(ng-repeat="data in data.nodes | orderBy:name" class="{{data.selected ? 'active' : ''}}" ng-include="'tree_element.html'")

	//- Hack for the demo, render the list of objects
	script.
		var objs = !{objs};

	h1#logo 3D Repo
	nav.navbar.navbar-fixed-top.whitenavbar(role='navigation')
		div.container-fluid
			div.navbar-header
				button.navbar-toggle.collapsed(type="button" data-toggle="collapse" data-target=".navbar-collapse")
					span.glyphicon.glyphicon-th
					span.icon-bar
			div.collapse.navbar-collapse
				ul.nav.navbar-nav
					li.dropdown
						a.dropdown-toggle(data-toggle="dropdown" href='#') Tools
							span.caret
						ul.dropdown-menu(role='menu')
							li
								a#measure(href='#') Measure
					li.dropdown
						a.dropdown-toggle(data-toggle="dropdown" href='#') View
							span.caret
						ul.dropdown-menu(role='menu')
							li
								a#view-everything(href='#') Everything
							li
								a#view-def-viewpoint(href='#') Default Viewpoint
					li.dropdown
						a.dropdown-toggle(data-toggle="dropdown"
								href="#") Mesh
							span.caret
						ul.dropdown-menu.scrollable-menu(role='menu')
							each mesh in repo
								li
									a(href='/3drepoio/' + mesh)= mesh

	div.fill
		div.treeview(ng-controller="TreeviewCtrl")
			div(ng-init="param")
			div.treeview-header
				h3 Total Bid: £{{compute_total()}}
			ul(class="nav nav-pills nav-stacked treerow")
				li(ng-repeat="data in tree" class="{{data.selected ? 'active' : ''}}" ng-include="'tree_element.html'")
		div.viewport
			//- POPUP is missing for the moment
			!{xml}



