variables:
  - group: tests-group

trigger:
  batch: true
  branches:
    include:
    - master
    - staging
    - 'ISSUE_*'

pr:
  branches:
    include:
    - 'ISSUE_*'  # must quote since "*" is a YAML reserved character; we want a string

pool:
  vmImage: 'ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.15.1'
  displayName: 'Install Node.js'


# - script: |
#     sudo wget https://packages.erlang-solutions.com/erlang/debian/pool/esl-erlang_22.3.4.3-1~ubuntu~xenial_amd64.deb
#     sudo dpkg -i esl-erlang_22.3.4.3-1~ubuntu~xenial_amd64.deb
#     sudo apt-get -y install expect-dev socat logrotate init-system-helpers adduser
#     sudo wget https://github.com/rabbitmq/rabbitmq-server/releases/download/v3.7.15/rabbitmq-server_3.7.15-1_all.deb
#     sudo dpkg -i rabbitmq-server_3.7.17-1_all.deb
#     sudo /etc/init.d/rabbitmq-server start
#     sudo sleep 10
#     sudo cat /var/log/rabbitmq/*
#   displayName: 'expect and rabbitmq'

- script: |
    ## Install RabbitMQ signing key
    curl -fsSL https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | sudo apt-key add -

    ## Install apt HTTPS transport
    sudo apt-get install apt-transport-https
    
    ## Add Bintray repositories that provision latest RabbitMQ and Erlang 23.x releases
    sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list <<EOF
    ## Installs the latest Erlang 23.x release.
    ## Change component to "erlang-22.x" to install the latest 22.x version.
    ## "bionic" as distribution name should work for any later Ubuntu or Debian release.
    ## See the release to distribution mapping table in RabbitMQ doc guides to learn more.
    deb https://dl.bintray.com/rabbitmq-erlang/debian xenial erlang
    ## Installs latest RabbitMQ release
    deb https://dl.bintray.com/rabbitmq/debian xenial main
    EOF
    
    ## Update package indices
    sudo apt-get update -y
    
    ## Install rabbitmq-server and its dependencies
    sudo apt-get install expect-dev rabbitmq-server -y --fix-missing
  displayName: 'Install RabbitMQ and Expect'

# - script: |
#     sudo wget -O - "https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey" | sudo apt-key add - 
#     curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | sudo bash
#     sudo apt-get install -y expect-dev rabbitmq-server
#     sudo service rabbitmq-server start
#     cat /var/log/rabbitmq/*
#   displayName: 'expect and rabbitmq'


# - script: |
#     sudo apt-get update 
#     sudo apt-get install -y expect-dev -V 
#     sudo apt-get upgrade -y && \
#       sudo rm /var/lib/rabbitmq/.erlang.cookie && \
#       sudo service rabbitmq-server start && \
#       sudo systemctl status rabbitmq-server.service && \
#       sudo cat /var/log/rabbitmq/* && *\
#       sleep 10 && \
#       sudo systemctl status rabbitmq-server.service && *\
#       sudo cat /var/log/rabbitmq/*
#   displayName: 'expect and rabbitmq'

- script: |
    sudo apt-get install -y libappindicator1 fonts-liberation
    cd temp
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i google-chrome*.deb
  displayName: 'install chrome'

- script: |
    echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
    sudo apt-key list | \
      grep "expired: " | \
      sed -ne 's|pub .*/\([^ ]*\) .*|\1|gp' | \
      xargs -n1 sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys
    sudo apt-get update
    sudo apt-get install -y --allow-downgrades --allow-unauthenticated mongodb-org=3.2.22 mongodb-org-server=3.2.22 mongodb-org-shell=3.2.22 mongodb-org-tools=3.2.22
    sudo rm -rf /var/lib/mongodb/*
    sudo service mongod start
    until nc -z localhost 27017; do sudo tail /var/log/mongodb/mongod.log; sleep 5; done
  displayName: 'install mongo'

- script: |
    mkdir -p submodules
    test_ver=`cat backend/test/testDBVersion`
    cd submodules
    git clone https://${TESTS_USER}:${TESTS_PASSWORD}@github.com/3drepo/tests.git
    cd tests
    git checkout $test_ver
    git status
    cd backend && mongorestore
    cd ../../../
    cp -r ./submodules/tests/frontend/staticPages/legal/ ./resources/legal
  displayName: 'checkout tests'
  env: 
    TESTS_USER: $(TESTS_USER)
    TESTS_PASSWORD: $(TESTS_PASSWORD)

- script: |
    mkdir -p submodules
    test_ver=`cat backend/test/testDBVersion`
    cd submodules
    git clone https://${TESTS_USER}:${TESTS_PASSWORD}@github.com/3drepo/tests.git
    cd tests
    git checkout $test_ver
    git status
    cd backend && mongorestore
    cd ../../../
    cp -r ./submodules/tests/frontend/staticPages/legal/ ./resources/legal
  displayName: 'checkout tests'
  env: 
    TESTS_USER: $(TESTS_USER)
    TESTS_PASSWORD: $(TESTS_PASSWORD)

- script: |
    cd ./backend
    yarn install --network-timeout 100000
    yarn lint
  displayName: 'backend build and lint'

- script: |
    cd ./frontend
    DETECT_CHROMEDRIVER_VERSION=true yarn install --network-timeout 100000
    yarn lint
    yarn build:test
  displayName: 'frontend build:test'

- script: |
    cd ./backend
    mkdir coverage
    unbuffer yarn test:coverall
  displayName: 'backend yarn test:coverall'

- script: |
    NODE_ENV=test NODE_CONFIG_DIR='./config' node "./backend/3drepo.js" &
    cd ./frontend
    unbuffer yarn test
  displayName: 'frontend yarn test'
