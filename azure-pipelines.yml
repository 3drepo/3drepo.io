variables:
  - group: tests-group

trigger:
  batch: true
  branches:
    include:
    - master
    - staging
    - 'ISSUE_*'

pr:
  branches:
    include:
    - 'ISSUE_*'  # must quote since "*" is a YAML reserved character; we want a string

pool:
  vmImage: 'ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.15.1'
  displayName: 'Install Node.js'

- script: |
    sudo apt-get install -y expect-dev rabbitmq-server
  displayName: 'apt tasks'

- script: |
    sudo apt-get update
    sudo apt-get install -y libappindicator1 fonts-liberation
    cd temp
    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    sudo dpkg -i google-chrome*.deb
  displayName: 'install chrome'

- script: |
    echo "deb http://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list
    sudo apt-key list | \
      grep "expired: " | \
      sed -ne 's|pub .*/\([^ ]*\) .*|\1|gp' | \
      xargs -n1 sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys
    sudo apt-get update
    sudo apt-get install -y --allow-downgrades --allow-unauthenticated mongodb-org=3.2.22 mongodb-org-server=3.2.22 mongodb-org-shell=3.2.22 mongodb-org-tools=3.2.22
    sudo rm -rf /var/lib/mongodb/*
    sudo service mongod start
    until nc -z localhost 27017; do sudo tail /var/log/mongodb/mongod.log; sleep 5; done
  displayName: 'install mongo'

- script: |
    mkdir -p submodules
    test_ver=`cat backend/test/testDBVersion`
    cd submodules
    git clone https://${TESTS_USER}:${TESTS_PASSWORD}@github.com/3drepo/tests.git
    cd tests
    git checkout $test_ver
    git status
    cd backend && mongorestore
    cd ../../../
    cp -r ./submodules/tests/frontend/staticPages/legal/ ./resources/legal
  displayName: 'checkout tests'
  env: 
    TESTS_USER: $(TESTS_USER)
    TESTS_PASSWORD: $(TESTS_PASSWORD)

- script: |
    cd ./backend
    yarn install --network-timeout 100000
    yarn lint
    cd ../frontend
    DETECT_CHROMEDRIVER_VERSION=true yarn install --network-timeout 100000
    yarn lint
    yarn build:test
    echo $(pwd) 
    cd ../backend
    mkdir coverage
    unbuffer yarn test:coverall
    NODE_ENV=test NODE_CONFIG_DIR='./config' node "./backend/3drepo.js" &
    cd ../frontend
    unbuffer yarn test
  displayName: 'install and test'
