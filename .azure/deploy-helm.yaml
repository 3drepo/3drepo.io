# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master


resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '{{ containerRegistryConnection.Id }}'
  imageRepository: '{{#toAlphaNumericString imageRepository 50}}{{/toAlphaNumericString}}'
  containerRegistry: '{{ containerRegistryConnection.Authorization.Parameters.loginServer }}'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.SourceVersion)'
  imagePullSecret: '{{#toAlphaNumericString containerRegistryConnection.Name 50}}{{/toAlphaNumericString}}{{#shortGuid}}{{/shortGuid}}-auth'

pool:
  vmImage: 'ubuntu-latest'
stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: '3drepo-2080'
        repository: '3drepo.io'
        command: 'buildAndPush'
        Dockerfile: '.azure/Docker/Dockerfile'
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:
    - job: HelmInstall
      displayName: Install Helm
      steps:
      - task: HelmInstaller@0
        inputs:
          helmVersion: '3.3.1'
          installKubectl: true
          kubectlVersion: '1.16.6-beta.0'

      - task: HelmDeploy@0
        displayName: Helm Repo Add 
        inputs:
          command: repo
          arguments: add 3drepo https://3drepo.github.io/DevOps/

      - task: HelmDeploy@0
        displayName: Helm Repo update 
        inputs:
          command: repo
          arguments: update
    - job: HelmDeploy
      displayName: Helm Deployment
      steps: 
      - task: HelmDeploy@0
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'AWS EKS D5-default-1599670380350'
          namespace: 'default'
          command: 'upgrade'
          chartType: 'Name'
          chartName: '3drepo/3drepo-io'
          chartVersion: '0.2.2'
          releaseName: '${Build.SourceBranchName}'
          overrideValues: 'image.tag=$(tag),branchName=$(Build.SourceBranchName)'
          recreate: true