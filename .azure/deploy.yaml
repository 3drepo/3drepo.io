trigger: none
resources:
- repo: self

variables:
  willDeploy: $[length(variables.tag)]
  # Agent VM image name
  vmImageName: 'ubuntu-20.04'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8775ee4b-0b4d-40f5-b4fd-c9c74e4c5cac'
  imageRepository: '3drepo.io'
  containerRegistry: '3drepo.azurecr.io'
  DOCKER_BUILDKIT: 1
  group: tests-group
  customHelmOverride: |
    config.ADDITIONAL_CONFIG=hello

  # You can override specific values for this branch using the following syntax
  # comma delimit settings. remember the config. subsection for changes to IO settings, and without will make changes to the helm chart

  # customHelmOverride: |
  #   ,key=$(value),key=$(value)
  # i.e.
  # customHelmOverride: |
  #   config.APP_QUEUE_DNS=issue-xxx-rabbitmq,config.ADDITIONAL_CONFIG=hello


stages:
- stage: Deploy
  displayName: Deploy
  condition: eq(variables.willDeploy,'true')
  jobs:
    - job: DeployHelmChart
      pool:
        vmImage: $(vmImageName)
      variables:
      - name: DECODE_PERCENTS
        value: false
      displayName: Deploy
      steps:
      - checkout: none
      - task: HelmInstaller@1
        displayName: Helm Installer
        inputs:
          helmVersion: '3.8.0'
          installKubectl: true
          kubectlVersion: 'v1.19.1'
          checkLatestHelmVersion: false

      - task: Bash@3
        displayName: Helm Repo Add
        inputs:
          script: |
            helm repo add 3drepo https://3drepo.github.io/DevOps/
            helm repo update
          targetType: 'inline'

      - task: Bash@3
        displayName: Get default Helm values file
        inputs:
          script: |
            curl -u ${TESTS_USER}:${TESTS_PASSWORD} '$(helm-3drepo-io-defaults)' --output $(System.ArtifactsDirectory)/values.yaml
          targetType: 'inline'
        env:
          helm-3drepo-io-defaults: $(helm-3drepo-io-defaults) # the recommended way to map to an env variable
          TESTS_USER: $(TESTS_USER)
          TESTS_PASSWORD: $(TESTS_PASSWORD)

      - task: HelmDeploy@0
        displayName: Deploy helm chart
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'AWS EKS D5-default-1599670380350'
          namespace: 'default'
          command: 'upgrade'
          chartType: 'Name'
          chartName: '3drepo/io'
          chartVersion: '5.0.7'
          waitForExecution: false
          releaseName: '$(branchName)'
          overrideValues: 'image.tag=$(tag),branchName=$(branchName),$(customHelmOverride)'
          #recreate: true
          valueFile: $(System.ArtifactsDirectory)/values.yaml

