trigger: none

resources:
  pipelines:
  - pipeline: keifgwinn.3drepo.io-deploy   # Name of the pipeline resource
    source: keifgwinn.3drepo.io-build # Name of the pipeline referenced by the pipeline resource
    trigger: 
      branches:
      - releases/*
      - master

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8775ee4b-0b4d-40f5-b4fd-c9c74e4c5cac'
  imageRepository: '3drepo.io'
  containerRegistry: '3drepo.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/.azure/Docker/Dockerfile'
  tag: '$(Build.BuildId)' # not used currently
  DOCKER_BUILDKIT: 1
  releaseBranch: '$(System.PullRequest.SourceBranch)'
  sourceBranchName: '$(Branch.SourceBranchName)'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Deploy
  displayName: Deploy stage
  jobs:
    - job: DeployHelmChart
      displayName: Deploy Helm Chart
      steps:
      - checkout: none
      - task: HelmInstaller@0
        displayName: Helm Installer
        inputs:
          helmVersion: '3.3.1'
          installKubectl: true
          kubectlVersion: '1.16.6-beta.0'

      - task: Bash@3
        displayName: Helm Repo Add
        inputs:
          script: |
            helm repo add 3drepo https://3drepo.github.io/DevOps/
            helm repo update
          targetType: 'inline'
      
      - script: |
          if [[ "$releaseBranch" == '' ]] ; then # outputs initialValue
            echo 'ReleaseBranch blank = '$( echo "${sourceBranchName}" )
            echo '##vso[task.setvariable variable=releaseBranch]'$( echo "${sourceBranchName}" | sed "s/_/-/" | awk '{print tolower($0)}' )
          else
            printenv
            echo 'ReleaseBranch  = '$( echo "${releaseBranch}" | rev | cut -d'/' -f1 | rev | sed "s/_/-/" | awk '{print tolower($0)}' )
            echo 'sourceBranchName='$(sourceBranchName)
            echo 'releaseBranch='$(releaseBranch)
            echo '##vso[task.setvariable variable=releaseBranch]'$( echo "${releaseBranch}" | rev | cut -d'/' -f1 | sed "s/_/-/" | awk '{print tolower($0)}' | rev )
          fi
        displayName: Set new branch name value
        env:
          releaseBranch: $(releaseBranch)
          sourceBranchName: $(sourceBranchName)
      
      - task: Bash@3
        displayName: Get default Helm values file
        inputs:
          script: |
            curl '$(helm-3drepo-io-defaults)' --output $(System.ArtifactsDirectory)/values.yaml
          targetType: 'inline' # Optional. Options: filePath, inline
          #filePath: # Required when targetType == FilePath
          #arguments: # Optional
          #script: '# echo Hello world' # Required when targetType == inline
          #workingDirectory: # Optional
          #failOnStderr: false # Optional
          #noProfile: true # Optional
          #noRc: true # Optional
        env:
          helm-3drepo-io-defaults: $(helm-3drepo-io-defaults) # the recommended way to map to an env variable

      # - task: Bash@3
      #   displayName: check values file
      #   inputs:
      #     script: |
      #       cat $(System.ArtifactsDirectory)/values.yaml
      #     targetType: 'inline'

      - task: HelmDeploy@0
        displayName: Deploy helm chart
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'AWS EKS D5-default-1599670380350'
          namespace: 'default'
          command: 'upgrade'
          chartType: 'Name'
          chartName: '3drepo/3drepo-io'
          chartVersion: '0.2.4'
          releaseName: '$(releaseBranch)'
          overrideValues: 'image.tag=$(Build.SourceVersion),branchName=$(releaseBranch)'
          #recreate: true
          valueFile: $(System.ArtifactsDirectory)/values.yaml