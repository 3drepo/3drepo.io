trigger:
  batch: true
  branches:
    include:
    - master
    - staging

pr:
  branches:
    include:
    - master
    - staging
    - 'ISSUE_*'

resources:
- repo: self

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '8775ee4b-0b4d-40f5-b4fd-c9c74e4c5cac'
  imageRepository: '3drepo.io'
  containerRegistry: '3drepo.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/.azure/Docker/Dockerfile'
  tag: '$(Build.BuildId)' # not used currently
  DOCKER_BUILDKIT: 1
  branchName: master
  group: tests-group

stages:
- stage: Build
  displayName: Container
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
      # fetchDepth: 1   # the depth of commits to ask Git to fetch, but 3 mins to get depth1 vs 1 minute 20 to get all.

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(Build.SourceBranchName)
          $(Build.SourceVersion)

- stage: Helm
  displayName: Deploy
  jobs:
    - job: DeployHelmChart
      displayName: Deploy
      steps:
      - checkout: none
      - task: HelmInstaller@1
        displayName: Helm Installer
        inputs:
          helmVersion: '3.3.1'
          installKubectl: true
          kubectlVersion: 'v1.19.1'
          checkLatestHelmVersion: false

      - task: Bash@3
        displayName: Helm Repo Add
        inputs:
          script: |
            helm repo add 3drepo https://3drepo.github.io/DevOps/
            helm repo update
          targetType: 'inline'
      
      - script: |
          if [[ "$SYSTEM_PULLREQUEST_SOURCEBRANCH" != "" ]]; then
            echo '##vso[task.setvariable variable=branchName]'$( echo $SYSTEM_PULLREQUEST_SOURCEBRANCH | sed "s/_/-/" | awk '{print tolower($0)}' )
          else
            echo '##vso[task.setvariable variable=branchName]'$( echo $BUILD_SOURCEBRANCHNAME | sed "s/_/-/" | awk '{print tolower($0)}' )
          fi
        displayName: Set new branch name value

      - task: Bash@3
        displayName: Get default Helm values file
        inputs:
          script: |
            curl -u ${TESTS_USER}:${TESTS_PASSWORD} '$(helm-3drepo-io-defaults)' --output $(System.ArtifactsDirectory)/values.yaml
          targetType: 'inline'
        env:
          helm-3drepo-io-defaults: $(helm-3drepo-io-defaults) # the recommended way to map to an env variable
          TESTS_USER: $(TESTS_USER)
          TESTS_PASSWORD: $(TESTS_PASSWORD)

      - task: HelmDeploy@0
        displayName: Deploy helm chart
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceConnection: 'AWS EKS D5-default-1599670380350'
          namespace: 'default'
          command: 'upgrade'
          chartType: 'Name'
          chartName: '3drepo/3drepo-io'
          chartVersion: '0.2.6'
          releaseName: '$(branchName)'
          overrideValues: 'image.tag=$(Build.SourceVersion),branchName=$(branchName)'
          #recreate: true
          valueFile: $(System.ArtifactsDirectory)/values.yaml

