trigger:
  batch: true
  branches:
    include:
    - master
    - staging

pr:
  branches:
    include:
    - master
    - staging
    - 'ISSUE_*'

resources:
  repositories:
  - repository: devops
    type: github
    endpoint: 3drepo   # <-- GitHub service connection in Azure DevOps
    name: 3drepo/DevOps
    ref: refs/heads/$(DEVOPS_BRANCH)

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-24.04'
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3drepo.azurecr.io'
  imageRepository: '3drepo.io'
  containerRegistry: '3drepo.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/.azure/Docker/Dockerfile'
  tag: '$(Build.BuildId)' # not used currently
  DOCKER_BUILDKIT: 1
  branchName: master
  group: tests-group
  customHelmOverride: |
    config.ADDITIONAL_CONFIG=hello

  # Default DevOps branch (can override at queue time)
  DEVOPS_BRANCH: ISSUE_1205

stages:
- stage: Build
  displayName: Container
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self  # self = IO repo (where this YAML lives)

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(Build.SourceBranchName)
          $(Build.SourceVersion)

- stage: Helm
  displayName: 'Helm Deploy'
  dependsOn: Build
  jobs:
    - job: Helm
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        # ✅ Package Helm chart from the devops repo
        - task: Bash@3
          displayName: Package Helm chart
          inputs:
            targetType: 'inline'
            script: |
              helm package "$(Build.SourcesDirectory)/devops-source/helm/io" --destination "$(Build.ArtifactsDirectory)"

        # ✅ Publish packaged chart as artifact
        - task: PublishPipelineArtifact@1
          displayName: Publish Helm chart artifact
          inputs:
            targetPath: '$(Build.ArtifactsDirectory)'
            artifact: 'helm-chart'
            publishLocation: 'pipeline'

        # ✅ Deploy Helm chart
        - task: HelmDeploy@0
          displayName: Deploy Helm chart
          inputs:
            connectionType: 'Kubernetes Service Connection'
            kubernetesServiceConnection: 'stg3drepo'
            namespace: 'default'
            command: 'upgrade'
            releaseName: 'issue-5657'
            install: true
            waitForExecution: true
            valueFile: '$(Build.ArtifactsDirectory)/values.yaml'
            set: |
              image.tag=$(Build.SourceVersion)
              branchName=$(Build.SourceBranchName)
              config.ADDITIONAL_CONFIG=hello
            chartPath: '$(Build.ArtifactsDirectory)/io-*.tgz'

