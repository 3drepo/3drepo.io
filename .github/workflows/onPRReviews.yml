name: On review update
on:
  pull_request:
    types: [ready_for_review, review_requested, review_request_removed]
  pull_request_review:
    types: [edited, dismissed, submitted]
jobs:
  get-pr-number:
    name: Get Current PR Number
    runs-on: ubuntu-latest
    outputs: 
      pr-number: ${{ steps.condval.outputs.value }}
    steps:
      - uses: 3drepo/action-cond@v1
        id: condval
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: ${{ github.event.number }}
          if_false: ${{ github.event.pull_request.number }}

  get-issue-number:
    name: Get Current Issue Number
    needs: [ get-pr-number ]
    runs-on: ubuntu-latest
    outputs: 
      issue-number: ${{ steps.commitMsgParser.outputs.issue-number }}
      content-id: ${{ steps.commitMsgParser.outputs.content-id }}
    steps:
      - name: Extract Issue Number from PR
        uses: 3drepo/extract-issue-number-from-PR@v1
        with:
          pr: ${{ needs.get-pr-number.outputs.pr-number }}
          base: staging
          github-token: ${{ secrets.GITHUB_TOKEN }}
        id: commitMsgParser

  check-merge-ready:
    name: Ensure all reviewers have approved the PR
    runs-on: ubuntu-latest
    needs: [ get-issue-number ]
    outputs: 
      approved: ${{ steps.checkReviews.outputs.approved }}
    steps:
      - uses: 3drepo/action-cond@v1
        id: condval
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: ${{ github.event.number }}
          if_false: ${{ github.event.pull_request.number }}
      - name: Check reviews
        id: checkReviews
        uses: 3drepo/all-reviewers-approved@v1
        with:
          pr: ${{ steps.condval.outputs.value }}
          github-token: ${{ secrets.GITHUB_TOKEN }}


#  if someone has been assigned a reviewer -> change issue status to "awaiting approval"
  update-project-issue-status:
    name: Update Project Issue Status
    if: failure() # if not reviewer approved let's modify the status.
    runs-on: ubuntu-latest
    outputs: 
      content-id: ${{ needs.get-issue-number.outputs.content-id }}
      status: ${{ steps.setStatusOutput.outputs.status }}
    needs: [ get-issue-number, check-merge-ready ]
    steps:
      - name: Set status message from input 
        id: setStatusOutput   
        run: |
          set -ex 
          case $ACTION in
            submitted ) 
              echo "status=Address Feedback" >> $GITHUB_OUTPUT
              ;;
            review_requested ) 
              echo "status=To Review" >> $GITHUB_OUTPUT
              ;;
            ready_for_review ) 
              echo "status=Awaiting Approval" >> $GITHUB_OUTPUT
              ;;
          esac
        env:
          ACTION: ${{ github.event.action }}
      - name: Update status
        id: update_status
        uses: 3drepo/update-project-action@v1.1
        with:
          github_token: ${{ secrets.PROJ_MANAGEMENT_TOKEN }}
          organization: 3drepo
          project_number: 22
          content_id: ${{ needs.get-issue-number.outputs.content-id }}
          field: Status
          value: ${{ steps.setStatusOutput.outputs.status }}
  
  #Ensure the issue number is in the pull request title.
  ensure-well-formatted-issue-title:
    runs-on: ubuntu-latest
    name: Ensure a well formatted Issue Title
    steps:
    - uses: 3drepo/pr-update-action@v1
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        base-branch-regex: '[a-z\d-_.\\/]+'
        head-branch-regex: 'ISSUE_\d+'
        lowercase-branch: false
        title-template: '%headbranch% - '
