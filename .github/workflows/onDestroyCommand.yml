name: Destroy From Staging

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

permissions:
  checks: write
  contents: write
  deployments: write

on: 
  repository_dispatch:
    types: [ destroy-command ]

jobs:
  get-details:
    name: Get PR and Issue Details
    runs-on: ubuntu-latest
    outputs:
      issue-number: ${{ steps.commitMsgParser.outputs.issue-number }}
      issue-content-id: ${{ steps.commitMsgParser.outputs.issue-content-id }}
      deployment-id: ${{ steps.githubdeployment.outputs.deployment_id }}
    steps:
      - name: Extract Issue Number from PR
        uses: 3drepo/extract-pr-information@v1
        with:
          pr: ${{ github.event.pull_request.number }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
        id: commitMsgParser

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment
        id: githubdeployment
        with:
          token: '${{ github.token }}'
          environment-url: https://issue-${{ steps.commitMsgParser.outputs.issue-number }}.staging.dev.3drepo.io
          environment: issue-${{ steps.commitMsgParser.outputs.issue-number }}

  destroy-branch:
    name: Call Azure Destroy Pipeline
    runs-on: ubuntu-latest
    needs: [ get-details, build-images]
    steps:
    - name: Azure Pipelines Action
      if: needs.get-details.outputs.issue-number
      uses: 3drepo/pipelines@ISSUE_1
      with:
        azure-devops-project-url: https://dev.azure.com/3drepo/3drepo.io
        azure-pipeline-name: 'destroy'
        azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
        azure-pipeline-variables:  '{"branchName": "issue-${{ needs.get-details.outputs.issue-number }}"}'

    - name: Update deployment status (success)
      if: failure() 
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        state: 'success'
        deployment-id: ${{ needs.get-details.outputs.deployment-id }}

    - name: Update deployment status (failure)
      if: success()
      uses: chrnorm/deployment-status@v2
      with:
        token: '${{ github.token }}'
        state: 'failure'
        deployment-id: ${{ needs.get-details.outputs.deployment-id }}